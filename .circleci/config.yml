version: 2.1
orbs:
  win: circleci/windows@2.2.0
commands:
  setup-linux-builder:
    description: Setup Artichoke Linux builder image
    steps:
      - checkout
      - run:
          name: Install Rust Toolchain
          command: |
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y -q --profile minimal --default-toolchain "$(cat rust-toolchain)"
            echo 'export "PATH"="$HOME/.cargo/bin:$PATH"' >> $BASH_ENV
      - run:
          name: Install Toolchain
          working_directory: "~"
          command: |
            sudo apt-get install -y clang bison
      - run:
          name: Install sccache
          working_directory: "~"
          command: |
            sudo apt-get install -y pkg-config libssl-dev
            curl -o- -sSLf https://github.com/mozilla/sccache/releases/download/0.2.12/sccache-0.2.12-x86_64-unknown-linux-musl.tar.gz | tar xzf -
            mv sccache-0.2.12-x86_64-unknown-linux-musl/sccache .cargo/bin/sccache
            echo 'export "RUSTC_WRAPPER"="sccache"' >> $BASH_ENV
            echo 'export "SCCACHE_CACHE_SIZE"="1G"' >> $BASH_ENV
      - run:
          name: Installed Toolchain Versions
          command: |
            rustc --version --verbose
            cargo --version --verbose
            ruby --version
            clang --version
            bison --version
  setup-windows-builder:
    description: Setup Artichoke Windows builder image
    steps:
      - checkout
      - restore_cache:
          name: Restore sccache cache
          key: v2-sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}
      - run:
          name: Install Toolchain
          command: |
            $toolchain = Get-Content rust-toolchain | Select-Object -First 1
            Set-Location "$env:USERPROFILE"
            # Install rustup
            $client = new-object System.Net.WebClient
            $client.DownloadFile('https://win.rustup.rs', "$pwd\rustup-init.exe")
            .\rustup-init.exe -y --profile minimal --default-toolchain "$($toolchain)-msvc"
            # This is necessary because otherwise cargo fails when trying to use git?
            Add-Content "$env:USERPROFILE\.cargo\config" "[net]`ngit-fetch-with-cli = true"
            choco install ruby --no-progress --version=2.6.3.1
            choco install visualstudio2019-workload-vctools --no-progress
            choco install llvm --no-progress
            choco install winflexbison3 --ignore-checksums --no-progress
      - run:
          name: Install sccache
          command: |
            Set-Location "$env:USERPROFILE"
            $client = new-object System.Net.WebClient
            $client.DownloadFile('https://github.com/mozilla/sccache/releases/download/0.2.12/sccache-0.2.12-x86_64-pc-windows-msvc.tar.gz', "$pwd\sccache.tar.gz")
            tar -xvzf .\sccache.tar.gz
            Move-Item -Path .\sccache-0.2.12-x86_64-pc-windows-msvc\sccache.exe -Destination .\.cargo\bin\sccache.exe
      - run:
          name: Installed Toolchain Versions
          command: |
            rustc --version --verbose
            cargo --version --verbose
            ruby --version
            clang --version
            win_bison --version
  setup-linux-linter:
    description: Setup Artichoke Windows linter image
    steps:
      - setup-linux-builder
      - run:
          name: Install Rust Toolchain
          command: |
            rustup component add rustfmt
            rustup component add clippy
      - run:
          name: Install Shell Toolchain
          working_directory: "~"
          command: |
            curl -o- -sSfL https://storage.googleapis.com/shellcheck/shellcheck-stable.linux.x86_64.tar.xz | tar xJf -
            sudo mv shellcheck-stable/shellcheck /usr/local/bin
            sudo chmod +x /usr/local/bin/shellcheck
            sudo curl -o/usr/local/bin/shfmt -sSfL https://github.com/mvdan/sh/releases/download/v2.6.4/shfmt_v2.6.4_linux_amd64
            sudo chmod +x /usr/local/bin/shfmt
      - run:
          name: Install JS Packages
          command: |
            yarn install
      - run:
          name: Install Bundler
          command: |
            gem install bundler
      - run:
          name: Installed Toolchain Versions
          command: |
            rustc --version --verbose
            cargo --version --verbose
            sccache --version
            rustfmt --version
            cargo clippy -- --version
            ruby --version
            node --version
            yarn --version
            yarn --silent clang-format --version
            shellcheck --version
            shfmt -version
  rubocop:
    description: Lint Ruby sources with RuboCop
    parameters:
      target:
        type: string
    steps:
      - restore_cache:
          keys:
            - v2-bundler-cache-{{ .Environment.CIRCLE_JOB }}-{{ checksum "<< parameters.target >>/Gemfile.lock" }}
      - run:
          name: Bundle Install
          working_directory: "<< parameters.target >>"
          command: |
            bundle install --path ~/vendor
      - run:
          name: Lint Ruby With RuboCop
          working_directory: "<< parameters.target >>"
          command: |
            bundle exec rubocop --version
            bundle exec rubocop
      - save_cache:
          key: v2-bundler-cache-{{ .Environment.CIRCLE_JOB }}-{{ checksum "<< parameters.target >>/Gemfile.lock" }}
          paths:
            - "~/vendor"
jobs:
  x86_64-linux:
    docker:
      - image: circleci/ruby:2.6.3-buster
    resource_class: large
    steps:
      - setup-linux-builder
      - restore_cache:
          name: Restore sccache cache
          key: v2-sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}
      - run:
          name: Build workspace without default features
          command: |
            cargo build -p artichoke-backend --no-default-features
          environment:
            RUST_BACKTRACE: 1
      - run:
          name: Build Workspace
          command: |
            cargo build
          environment:
            RUST_BACKTRACE: 1
      - run:
          name: Test Workspace
          command: cargo test --all-features
          environment:
            RUST_BACKTRACE: 1
      - save_cache:
          name: Save sccache cache
          key: v2-sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ epoch }}
          paths:
            - "~/.cache/sccache"
  x86_64-windows:
    executor:
      name: win/default
    steps:
      - setup-windows-builder
      - restore_cache:
          name: Restore sccache cache
          key: v2-sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}
      - run:
          name: Build Workspace
          command: |
            cargo build
          environment:
            RUST_BACKTRACE: 1
            RUSTC_WRAPPER: sccache
            SCCACHE_CACHE_SIZE: 1G
            LIBCLANG_PATH: C:\Program Files\LLVM\bin
      - run:
          name: Test Workspace
          command: |
            cargo test --all-features
            % 'suppressing test failures. See GH-359.'
          environment:
            RUST_BACKTRACE: 1
            RUSTC_WRAPPER: sccache
            SCCACHE_CACHE_SIZE: 1G
            LIBCLANG_PATH: C:\Program Files\LLVM\bin
      - save_cache:
          name: Save sccache cache
          key: v2-sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ epoch }}
          paths:
            - "C:\\Users\\circleci\\AppData\\Local\\Mozilla\\sccache"
  ruby-spec:
    docker:
      - image: circleci/ruby:2.6.3-buster
    resource_class: large
    steps:
      - setup-linux-builder
      - restore_cache:
          name: Restore sccache cache
          key: v2-sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}
      - run:
          name: ruby/spec Compliance Regression Test
          command: |
            # Suppress failures from spec suite
            ./scripts/spec-compliance.sh --artichoke || :
      - save_cache:
          name: Save sccache cache
          key: v2-sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ epoch }}
          paths:
            - "~/.cache/sccache"
  linter:
    docker:
      - image: circleci/ruby:2.6.3-buster-node
    resource_class: large
    steps:
      - setup-linux-linter
      - restore_cache:
          key: v2-node-modules-cache-{{ .Environment.CIRCLE_JOB }}-{{ checksum "yarn.lock" }}
      - restore_cache:
          name: Restore sccache cache
          key: v2-sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}
      - run:
          name: Format Rust Sources
          command: |
            cargo fmt -- --check --color=auto
      - run:
          name: Lint Rust With Clippy
          command: |
            cargo clippy --all-targets --all-features
      - run:
          name: Check Rust Docs
          command: |
            cargo doc --no-deps --all
      - rubocop:
          target: .
      - run:
          name: Format C Sources
          command: |
            ./scripts/format-c.sh --check
      - run:
          name: Format Shell Sources
          command: |
            shfmt -f . | grep -v target/ | grep -v node_modules/ | grep -v vendor/ | xargs shfmt -i 2 -ci -s -d
      - run:
          name: Lint Shell Sources
          command: |
            shfmt -f . | grep -v target/ | grep -v node_modules/ | grep -v vendor/ | xargs shellcheck
      - run:
          name: yarn check
          command: |
            yarn check --integrity
            yarn check --verify-tree
      - run:
          name: Lint JavaScript with eslint
          command: |
            yarn run eslint --ext .html,.js .
      - run:
          name: Format Text Sources
          command: |
            ./scripts/format-text.sh --check "css"
            ./scripts/format-text.sh --check "html"
            ./scripts/format-text.sh --check "js"
            ./scripts/format-text.sh --check "json"
            ./scripts/format-text.sh --check "yaml"
            ./scripts/format-text.sh --check "yml"
            ./scripts/format-text.sh --check "md"
      - save_cache:
          name: Save sccache cache
          key: v2-sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ epoch }}
          paths:
            - "~/.cache/sccache"
      - save_cache:
          key: v2-node-modules-cache-{{ .Environment.CIRCLE_JOB }}-{{ checksum "yarn.lock" }}
          paths:
            - "~/.cache/yarn"
            - "node_modules"
      - persist_to_workspace:
          root: target
          paths:
            - "doc"
  deploy:
    docker:
      - image: node:lts
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "ac:59:ea:b4:7f:14:dd:de:a7:50:3e:d0:35:c9:a5:a9"
      - attach_workspace:
          at: target
      - restore_cache:
          key: v2-node-modules-cache-{{ .Environment.CIRCLE_JOB }}-{{ checksum "yarn.lock" }}
      - run: yarn install
      - run:
          name: Copy doc asset overrides
          command: cp assets/* target/doc
      - run:
          name: Deploy docs to gh-pages branch
          command: |
            yarn run gh-pages \
              --user "ci-build <ci-build@hyperbo.la>" \
              --message "[skip ci] build docs" \
              --dist target/doc
      - save_cache:
          key: v2-node-modules-cache-{{ .Environment.CIRCLE_JOB }}-{{ checksum "yarn.lock" }}
          paths:
            - "~/.cache/yarn"
            - "node_modules"
workflows:
  version: 2
  build:
    jobs:
      - x86_64-linux
      - x86_64-windows
      - ruby-spec
      - linter
      - deploy:
          requires:
            - x86_64-linux
            - x86_64-windows
            - linter
          filters:
            branches:
              only: master
